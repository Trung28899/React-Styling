1. Dynamic styling: 
-------------------

- This module shows how to set Styles and Class Name for styling Dynamically

- Setting Style Dynamically: 
+, notice the variable 'style', the background color got changed
The code is in the commented part for all commit on git 

- Setting Class Name Dynamically: 
+, notice the use of classes[] array
example in git commit 1-4

-----------------------------------------------------------------------------------------

2. Using Radium: 1st and 2nd commit
----------------

- To code pseudo classes like :hover and using media query in javascript
- The alternative way would be do all the styling in the .css file or 
using anther 3rd library down below

- You can see the example in App.js, search for ':hover' and
search for 'media' in Person.js to understand more
(notice that this is only searchable in the 1st and 2nd commit of the code in github
other commit show the use of 'Styled Component' library)
- Also notice the use of <StyleRoot> tag in App.js

-----------------------------------------------------------------------------------------

3. Styled Component: commit 4th
-------------------- 
Why using styled component ? 
own opinion:
- For easier Dynamic styling
- More maintainable and reusable block of code
researched opinion: later researching needed

a. Installation, Documentation and Importation: 
- Go to: https://styled-components.com/
- Type in this command for installation: 
npm install --save styled-components
- import styled from 'styled-components'

b. How to use: 
- In App.js, notice the use of 'const StyledButton'
- In Person.js, notice the use of 'const StyledDiv'
- Notice the use of alt attribute in <StyledButton>
tag

- The 'style' variable which is imported has access to all
kinds of html tags like: div, button, a, p, h1, etc...
so you can write something like: 
style.h1 or style.a

- Passing styling in Css code between the back tick to apply 
styling. Notice that it is the styling in css, when in Radium 
we style in javascript, there is a slight difference. 

- Can also use javascript within the backtick for Dynamic styling, 
see example of 'const StyledButton' and 'const StyledDiv'
3
c. Some background info: 
- The compiler will get the styled variable, transform it into 
css and put it into the beginning of the html page with a class. 
The html tag will get automatically applied the class of styling on
the top of the page
- See video 71 or see the code in the source code of the page for
further understanding
- See git commit 4th for best example and Documentation

-----------------------------------------------------------------------------------------
4. Css Module (most preferred way of styling in React): latest git commit
Why use CSS Module ?
- Styling CSS is customed for different component since the 
styling class compiled has an unique class name, not the class name written
in the css file. Therefore, the styling is not globally applied

- Styling css in css has more IDE supported than styling css in js file

- Load faster since doesn't have to import 3rd library package

a. Installation of CSS Module: 
- Check in package.json: 
under "dependencies": "react-scripts": "1.0.13"
if using 2.x or higher version, watch video 74 at 2:37

- run command: npm run eject > file will be updated
(might get an error and need to push a new commit to github for the
error to go away)

- After run the command above 
+, Go to: config/webpack.config.dev.js > 
Look for "test: /\.css$/", under "importLoaders: 1," add the following: 
modules:true, 
localIdentName: '[name]__[local]__[hash:base64:5]'

+, Go to: config/webpack.config.prod.js
Look for "test: /\.css$/", under "sourceMap: shouldUseSourceMap,", add the following: 
modules:true, 
localIdentName: '[name]__[local]__[hash:base64:5]'

+, Now go to App.js, add the following: 
import classes from "./App.css";
instead of
import "./App.css"; 
this will import all the classes in the App.css file

b. How to code CSS Module: 

- In App.js, Look in the JSX code below the return
, see how className is imported to know how to use css module

Instead of "className='Button'", we use:
"className={classes.Button}" 

see video 73, minute 9:20 to understand the working of CSS module

- DYNAMIC STYLING IN CSS MODULE: 
+, Look in App.css
+, In App.js, look for the use of 'btnClass'

- CSS Module is applied also in Person.js



MORE ABOUT CSS MODULE: 
https://github.com/css-modules/css-modules